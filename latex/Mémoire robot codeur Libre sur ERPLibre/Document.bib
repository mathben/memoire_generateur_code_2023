@IEEEtranBSTCTL{IEEEexample:BSTcontrol,
    CTLuse_forced_etal       = "yes",
    CTLmax_names_forced_etal = "3",
    CTLnames_show_etal       = "1"
}

@article{SAHIN2020,
    author = {UYANIK, BURAK and ŞAHİN, VEYSEL HARUN (2020)},
    title = {A template-based code generator for web applications},
    journal = {Turkish Journal of Electrical Engineering and Computer Sciences},
    year = {2020},
    volume = {28},
    number = {3},
    pages = {1747--1762, article 37},
    month = {1 janvier},
    doi = {10.3906/elk-1910-44},
    url = {https://journals.tubitak.gov.tr/elektrik/vol28/iss3/37}
}

@article{LC_bock_2021,
    author = {Bock, A.C. and Frank, U.},
    title = {Low-Code Platform},
    journal = {Bus Inf Syst Eng },
    year = {2021},
    volume = {63},
    pages = {733--740},
    month = {15 novembre},
    doi = {10.1007/s12599-021-00726-8},
    url = {https://doi.org/10.1007/s12599-021-00726-8}
}

@INPROCEEDINGS{9226356,
  author={Sahay, Apurvanand and Indamutsa, Arsene and Di Ruscio, Davide and Pierantonio, Alfonso},
  booktitle={2020 46th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)}, 
  title={Supporting the understanding and comparison of low-code development platforms}, 
  year={2020},
  volume={},
  number={},
  pages={171-178},
  url={https://ieeexplore.ieee.org/abstract/document/9226356},
  doi={10.1109/SEAA51224.2020.00036}
}

@article{thompson_trusting_1984,
    author = {Thompson, K.},
    title = {Reflections on trusting trust.},
    journal = {Communications of the ACM},
    year = {1984},
    volume = {27(8)},
    pages = {761--763},
    url = {https://www.cs.cmu.edu/~rdriley/487/papers/Thompson_1984_ReflectionsonTrustingTrust.pdf}
}

@phdthesis{guillibert:tel-02929676,
  TITLE = {{Terre et capital : penser la destruction de la nature {\`a} l'{\^a}ge de catastrophes globales}},
  AUTHOR = {Guillibert, Paul},
  URL = {https://theses.hal.science/tel-02929676},
  NUMBER = {2019PA100069},
  SCHOOL = {{Universit{\'e} de Nanterre - Paris X}},
  YEAR = {2019},
  MONTH = Oct,
  KEYWORDS = {Capitalism ; Nature ; Environmental history ; Cosmopolitics ; Marxism ; Disaster ; Destruction ; Capitalisme ; Nature ; Histoire environnementale ; Cosmopolitique ; Marxisme ; Catastrophe ; Destruction},
  TYPE = {Theses},
  PDF = {https://theses.hal.science/tel-02929676/file/2019PA100069.pdf},
  HAL_ID = {tel-02929676},
  HAL_VERSION = {v1},
}

@inproceedings{artiste_techno_conf_2012,
    author = {P Krajewski},
    title = {Qu’est-ce qu’un artiste technologique ?},
    booktitle = {Conférence Beaux-Arts Lisbonne},
    year = {2012},
    month = {mai},		
    intype = {Conférence},		
    url = {https://pkaccueil.files.wordpress.com/2012/06/conf_bxarts.pdf}
}

@article{tatsuya_computational_autopoiesis_2000,
    author = {Tatsuya Nomura},
    title = {A Computational Aspect of Autopoiesis},
    journal = {System Technology Development Center - Sharp Corporation},
    year = {2000},
    month = {janvier},
    url = {https://www.researchgate.net/publication/228784157_A_Computational_Aspect_of_Autopoiesis}
}

@article{open_interop_2011,
    author = {Fernando Almeida and José Oliveira and José Cruz},
    title = {OPEN STANDARDS AND OPEN SOURCE: ENABLING INTEROPERABILITY},
    journal = {International Journal of Software Engineering \& Applications (IJSEA)},
    year = {2011},
    volume = {2},
    number = {1},
    month = {1 janvier},
    doi = {10.5121/ijsea.2011.2101},
    url = {https://airccse.org/journal/ijsea/papers/0111ijsea01.pdf}
}

@article{innovation_complex_social_system_2010,
    author = {Petra Ahrweiler},
    title = {Innovation in Complex Social Systems},
    journal = {Routledge},
    year = {2010},
    volume = {1st Edition},
    month = {13 mars},
    doi = {10.4324/9780203855324},
    url = {https://www.taylorfrancis.com/books/edit/10.4324/9780203855324/innovation-complex-social-systems-petra-ahrweiler}
}

@mastersthesis{uqam_erp_benefice_2008,
    author = {OLIVIER BRAUD},
    title = {FACTEURS DECISIONNELS POUR L'IMPLANTATION D'UN ERP DANS LES PME: LE ROLE DE L'EVALUATION DES BENEFICES TANGIBLES ET INTANGIBLES},
    school = {Université du Québec à Montréal},
    year = {2008},
    month = {avril},
    address = {Montréal, QC},
    type = {mémoire de maîtrise},	
    url = {http://archipel.uqam.ca/id/eprint/1229}
}

@article{erudit_accorderie_2014,
    author = {Michaud, Myriam and Audebrand, Luc K.},
    title = {Les paradoxes de la transformation d’une association en coopérative de solidarité : le cas de l’Accorderie de Québec},
    journal = {Économie et Solidarités},
    year = {2014},
    volume = {44},
    number = {1-2},
    pages = {152-168},
    doi = {10.7202/1041610ar},
    url = {https://id.erudit.org/iderudit/1041610ar}
}

@misc{mordorintelligence_erp_2023,
    howpublished = {Mordor Intelligence},
    title = {Les principaux ERP du marché},
    year = {2023},
    month = {17 mars},
    url = {https://www.mordorintelligence.com/fr/industry-reports/enterprise-resource-planning-market},
}

@misc{guide_fusee,
    howpublished = {CimarLab à la Polytechnique Montréal},
    title = {Faire Une Super Équipe Engagée},
    year = {2023},
    month = {24 mars},
    url = {https://www.polymtl.ca/labac/},
}

@Article{MOUV_063_0130,
    author={Semal, Luc
    and Szuba, Mathilde},
    title={Villes en transition : imaginer des relocalisations en urgence},
    journal={Mouvements},
    year={2010},
    publisher={La D{\'e}couverte},
    address={Paris},
    volume={63},
    number={3},
    pages={130-136},
    abstract={Le num{\'e}ro 63 de Mouvements est disponible en librairie, ainsi qu'en ligne, sur le site de Cairn. Les altermondialistes s'appr{\^e}tent {\`a} f{\^e}ter 10 ans de forum social mondial - soit une d{\'e}cennie de luttes et de mobilisations. Le FSM est une {\'e}tape dans un cycle ouvert quelque part dans les ann{\'e}es 1990, au Chiapas (insurrection zapatiste, 1994) ou {\`a} Seattle (manifestations en marge du sommet de l'OMC, 1999). Il a des racines plus anciennes encore, dans le tiers-mondisme, le syndicalisme (ouvrier comme paysan), la solidarit{\'e} internationale, les mouvements de luttes contre les dictatures latino-am{\'e}ricaines de la seconde moiti{\'e} du XXe si{\`e}cle, etc. Les r{\'e}pertoires d'action des altermondialistes, les causes qu'ils d{\'e}fendent et leurs formes d'organisations ne sont pas n{\'e}es en janvier 2001 - du moins ne sont-ils pas n{\'e}s de rien. L'espoir que les mobilisations altermondialistes ont fait (re)na{\^i}tre a probablement conduit de nombreux acteurs et observateurs {\`a} surestimer la « nouveaut{\'e} » de ce cycle de luttes. 10 ans apr{\`e}s, en France du moins, l'ambiance a chang{\'e}.},
    isbn={9782707165138},
    doi={10.3917/mouv.063.0130},
    url={https://www.cairn.info/revue-mouvements-2010-3-page-130.htm},
    language={FR}
}

@misc{bigbang_erp_2023,
    howpublished = {Big Bang ERP inc.},
    title = {Marché de la planification des ressources d’entreprise – Croissance, tendances, impact du COVID-19 et prévisions (2023-2028)},
    year = {2023},
    month = {17 mars},
    url = {https://bigbang360.com/fr/les-principaux-erp-du-marche/}
}

@misc{softwarepath_erp_2023,
    howpublished = {Software Path Ltd},
    title = {What 1,384 ERP projects tell us about selecting ERP (2022 ERP report)},
    year = {2022},
    month = {18 janvier},
    url = {https://softwarepath.com/guides/erp-report}
}

@inbook{i18n_wiley,
    title = "Current platform support for internationalization",
    author = "Lehtola, Aarno and Kalliomäki, Sakari and Kylänpää, Markku and Magann, Francis and Jin, Lingzi",
    year = "1997",
    language = "English",
    isbn = "978-0-471-96974-7",
    pages = "229--287",
    editor = "Patrick Hall and Raymond Hudson",
    booktitle = "Software without frontiers",
    publisher = "Wiley",
    address = "United States",
}

@misc{sarkar2020quines,
    title={Quines are the fittest programs: Nesting algorithmic probability converges to constructors}, 
    author={Sarkar, Aritra},
    year={2020},
    eprint={2010.09646},
    archivePrefix={arXiv},
    primaryClass={cs.LO},
    url = {https://arxiv.org/abs/2010.09646}
}

@electronic{bluiksnot_repo,
    author = {Boris Luis},
    title = {Modules Odoo 12 - projet initiale du générateur de code et migrateur de base de données},
    year = {2019},
    month = {27 août},
    url = {https://github.com/bluisknot/github_odoo_apps/tree/12.0}
} 

@electronic{wikipedia_i18n,
    author = {Wikipédia},
    title = {Internationalisation et localisation - i18n},
    year = {2023},
    month = {17 février},
    url = {https://fr.wikipedia.org/wiki/Internationalisation_et_localisation}
} 

@electronic{wikipedia_image_non_violente,
    author = {Célia Portail},
    title = {OSBD en CNV},
    year = {2020},
    month = {20 avril},
    url = {https://commons.wikimedia.org/wiki/File:OSBD_en_CNV.jpg}
} 

@electronic{url_open_source_guide,
    title = {Building community},
    year = {2023},
    month = {24 mars},
    url = {https://opensource.guide/fr/building-community/}
} 

@electronic{github_ceppp_crm,
    author = {Daniel Margulius},
    title = {Projet Portail CEPPP - SuiteCRM 7.10.9},
    year = {2019},
    month = {27 décembre},
    url = {https://github.com/lerenardprudent/ceppp_crm}
} 

@electronic{ref_erplibre,
    author = {Benoit, Mathieu and Marie-Michèle Poulin},
    title = {ERP Libre v1.5.0 AGPLv3 contenant Odoo 12.0},
    year = {2023},
    month = {19 mars},
    url = {https://erplibre.ca}
} 

@electronic{wikipedia_test_informatique,
    author = {Wikipédia},
    title = {Liste de tests informatiques},
    year = {2023},
    month = {13 mars},
    url = {https://en.wikipedia.org/wiki/Software_testing}
} 

@electronic{python_pep8,
    author = {Guido van Rossum and Barry Warsaw and Nick Coghlan},
    title = {Guide de style pour le code Python},
    year = {2023},
    month = {25 février},
    url = {https://peps.python.org/pep-0008/}
} 

@electronic{wikipedia_retroingenierie,
    author = {Wikipédia},
    title = {Rétro-ingénierie en informatique},
    year = {2022},
    month = {10 septembre},
    url = {https://fr.wikipedia.org/wiki/Rétro-ingénierie_en_informatique}
} 

@electronic{gnu_critere_hebergement_2022,
    author = {Free Software Foundation, Inc},
    title = {Critères éthiques de GNU concernant l'hébergement de logiciel},
    year = {2022},
    month = {6 mai},
    url = {https://www.gnu.org/software/repo-criteria.fr.html}
} 

@electronic{wiki_allopoiesis_2018,
    author = {Wikipedia},
    title = {Allopoiesis},
    year = {2018},
    month = {28 décembre},
    url = {https://en.wikipedia.org/wiki/Allopoiesis}
} 

@electronic{wiki_autopoiesis_2022,
    author = {Wikipedia},
    title = {Autopoïèse},
    year = {2022},
    month = {30 octobre},
    url = {https://fr.wikipedia.org/wiki/Autopoïèse}
} 

@electronic{vuc_allopoiesis_2018,
    author = {PRINCIPIA CYBERNETICA WEB},
    title = {Allopoiesis},
    year = {2007},
    url = {http://pespmc1.vub.ac.be/ASC/ALLOPOIESIS.html}
} 

@electronic{wikipedia_image_retroingenierie,
    author = {Wikipedia},
    title = {Image altération du code via la rétro-ingénierie et la ré-ingénierie},
    year = {2021},
    month = {18 juin},
    url = {https://fr.wikipedia.org/wiki/Rétro-ingénierie_en_informatique#/media/Fichier:Retroingenierie_-_Byrne.svg}
} 

@electronic{discussion_reflection_trusting_2020,
    author = {Manan Shah},
    title = {A Discussion of Ken Thompson's "Reflections on Trusting Trust"},
    year = {2020},
    month = {1 juillet},
    url = {https://mananshah99.github.io/blog/2020/07/01/trusting-trust/}
} 

@electronic{devops_illustration,
    author = {Pease, Jeremy},
    howpublished = {Contegix},
    title = {DevOps Part 1: It’s More Than Teams.},
    year = {2017},
    month = {9 juin},
    url = {https://www.contegix.com/devops-part1-its-more-than-teams/}
} 

@article{ebert2016devops,
  title={DevOps},
  author={Ebert, Christof and Gallardo, Gorka and Hernantes, Josune and Serrano, Nicolas},
  journal={Ieee Software},
  volume={33},
  number={3},
  pages={94--100},
  year={2016},
  publisher={IEEE},
  doi={10.1109/MS.2016.68},
  url={https://ieeexplore.ieee.org/abstract/document/7458761},
}

@electronic{discussion_reflection_trusting_ia_2023,
    author = {Itay Yona},
    title = {Reflections on Trusting Trust \& AI},
    year = {2023},
    month = {16 janvier},
    url = {https://www.lesswrong.com/posts/BMnhDjJrix5BXE7yr/reflections-on-trusting-trust-and-ai}
} 

@electronic{robot_logiciel_oqlf_2018,
    author = {Office québécois de la langue française},
    title = {robot logiciel},
    year = {2018},
    url = {https://vitrinelinguistique.oqlf.gouv.qc.ca/fiche-gdt/fiche/8350665/robot-logiciel}
} 

@electronic{wiki_quine,
    author = {Wikipédia},
    title = {Quine (informatique)},
    year = {2022},
    month = {4 septembre},
    url = {https://fr.wikipedia.org/wiki/Quine_(informatique)}
} 

@article{cibois2010compte,
  title={Compte-rendu de: David Mandin, Les syst{\`e}mes d'{\'e}changes locaux (SEL). Circulations affectives et {\'e}conomie mon{\'e}taire. Paris, L'Harmattan, 2009, coll." Logiques sociales"},
  author={Cibois, Philippe},
  journal={Socio-logos. Revue de l'association fran{\c{c}}aise de sociologie},
  number={5},
  year={2010},
  publisher={Association fran{\c{c}}aise de sociologie},
  url={https://doi.org/10.4000/socio-logos.2449},
}

@phdthesis{kenza2018conception,
  title={Conception et r{\'e}alisation d’un module ERP pour le suivi des patients sur le plan m{\'e}dical et financier au niveau de la clinique EL DJOUHER},
  author={Kenza, Medjek and Idir, Yahia Messaoud},
  year={2018},
  school={Universit{\'e} Mouloud Mammeri},
  url={}
}

@INPROCEEDINGS{8823643,
  author={Erlenhov, Linda and Gomes de Oliveira Neto, Francisco and Scandariato, Riccardo and Leitner, Philipp},
  booktitle={2019 IEEE/ACM 1st International Workshop on Bots in Software Engineering (BotSE)}, 
  title={Current and Future Bots in Software Development}, 
  year={2019},
  volume={},
  number={},
  pages={7-11},
  doi={10.1109/BotSE.2019.00009},
  url={https://ieeexplore.ieee.org/document/8823643},
}

@article{pitetti2010implementation,
  title={L'impl{\'e}mentation d'un ERP libre implique-t-elle n{\'e}cessairement une r{\'e}duction des co{\^u}ts?},
  author={Pitetti, Fabien},
  journal={Haute École de Gestion de Genève (HEG-GE) Filière Informatique de Gestion},
  year={2010},
  url={https://folia.unifr.ch/global/documents/314234}
}

@inproceedings{violation_libre_2017,
    author = {Duan, Ruian and Bijlani, Ashish and Xu, Meng and Kim, Taesoo and Lee, Wenke},
    title = {Identifying Open-Source License Violation and 1-Day Security Risk at Large Scale},
    year = {2017},
    isbn = {9781450349468},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/3133956.3134048},
    doi = {10.1145/3133956.3134048},
    abstract = {With millions of apps available to users, the mobile app market is rapidly becoming very crowded. Given the intense competition, the time to market is a critical factor for the success and profitability of an app. In order to shorten the development cycle, developers often focus their efforts on the unique features and workflows of their apps and rely on third-party Open Source Software (OSS) for the common features. Unfortunately, despite their benefits, careless use of OSS can introduce significant legal and security risks, which if ignored can not only jeopardize security and privacy of end users, but can also cause app developers high financial loss. However, tracking OSS components, their versions, and interdependencies can be very tedious and error-prone, particularly if an OSS is imported with little to no knowledge of its provenance.We therefore propose OSSPolice, a scalable and fully-automated tool for mobile app developers to quickly analyze their apps and identify free software license violations as well as usage of known vulnerable versions of OSS. OSSPolice introduces a novel hierarchical indexing scheme to achieve both high scalability and accuracy, and is capable of efficiently comparing similarities of app binaries against a database of hundreds of thousands of OSS sources (billions of lines of code). We populated OSSPolice with 60K C/C++ and 77K Java OSS sources and analyzed 1.6M free Google Play Store apps. Our results show that 1) over 40K apps potentially violate GPL/AGPL licensing terms, and 2) over 100K of apps use known vulnerable versions of OSS. Further analysis shows that developers violate GPL/AGPL licensing terms due to lack of alternatives, and use vulnerable versions of OSS despite efforts from companies like Google to improve app security. OSSPolice is available on GitHub.},
    booktitle = {Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security},
    pages = {2169–2185},
    numpages = {17},
    keywords = {application security, code clone detection, license violation},
    location = {Dallas, Texas, USA},
    series = {CCS '17}
}

@OTHER{
	10553_41343,
	author = {Juana Teresa Guerra de la Torre and Svend Ostergaard},
	title = {Technopoiesis as complex dynamic knowledge construction. A biopoetic technological sciences},
	year = {2017},
	journal = {Revista Icono 14-Revista Cientifica De Comunicacion Y Tecnologias},
	volume = {15},
	abstract = {In this paper, we describe technopoiesis as the complex dynamics between four levels of an all-encompassing knowledge configuration. The first level corresponds to the interaction with the environment, mediated by representations and material forms. The second level involves the representations, for instance representations of force, which determine the interaction with the environment. The third level involves the use of material forms in the interaction, for instance using a stick to get hold of a piece of fruit. The fourth level is the technological level as such. From a view of Biopoetics that primarily understands technopoiesis as a synergic and dissipative process based on emergence and feedback conditions, our main contribution in this study consists in a dynamicist description of how these four levels interact with each other. Higher levels emerge from the lower ones, in a complex but deterministic process, where lower levels are also constrained by the higher ones.},
	abstract = {En este artículo describimos technopoiesis como dinámica compleja entre cuatro niveles de configuración de conocimiento integral. El primer nivel corresponde a la interacción con el entorno, y está mediado por representaciones y formas materiales. El segundo nivel es el de las representaciones, por ejemplo las de fuerzas, que son las que determinan la interacción con el entorno. El tercer nivel implica el uso de formas materiales en la interacción, como la utilización de un palo para coger una pieza de fruta. El cuarto es el nivel tecnológico como tal. Desde un enfoque Biopoético que entiende tecnopoiesis esencialmente como proceso sinérgico y disipativo basado en condiciones de emergencia y retroalimentación, nuestra principal aportación en este estudio consiste en describir de forma dinamicista cómo los cuatro niveles interaccionan entre ellos siguiendo pautas de complejidad de dichos procesos a lo largo de trayectorias creativas en las que niveles superiores emergen desde niveles inferiores de modo complejo pero determinista, y en el que los superiores limitan a los inferiores.},
	doi = {10.7195/ri14.v15i1.1034},	
}


@article{method_erp_system_2022,
    title = "A system development methodology for ERP systems",
    abstract = "An ERP (Enterprise Resource Planning) project is considered highly risky, since it is large, complex, usually unfamiliar to the organization and implemented under a tight timetable. It usually entails process reengineering and many changes. To reduce the risk and improve the probability of project success, an organization can use a structured development approach for such a project, beginning with the selection stage and culminating in the operation stage. There are several conventional structured development approaches. The major ones are the ISDLC model, the prototyping approach and the software package life cycle model. The implementation of an ERP system requires a new methodology that combines components from each of the above approaches. The model suggested in this paper is comprised of four stages: (1) selection; (2) definition; (3) implementation; and (4) operation, Several organizations that have adopted this structured methodology have evidenced a successful ERP implementation.",
    author = "Niv Ahituv and Seev Neumann and Moshe Zviran",
    year = "2002",
    month = mar,
    language = "אנגלית",
    volume = "42",
    pages = "56--67",
    journal = "Journal of Computer Information Systems",
    issn = "0887-4417",
    publisher = "Taylor and Francis Ltd.",
    number = "3",
}

@article{wu_2006,
    author={Wu, Jen‐Her and Wang, Yu‐Min},
    title={Measuring ERP success: the ultimate users' view},
    journal={International Journal of Operations {\&} Production Management},
    year={2006},
    month={Jan},
    day={01},
    publisher={Emerald Group Publishing Limited},
    volume={26},
    number={8},
    pages={882-903},
    abstract={Purpose Enterprise resource planning (ERP) is now considered to be the price of entry for running a business. However, ERP systems are complex and expensive, and the decision to install an ERP system necessitates a choice of mechanisms for determining whether ERP is needed and, once implemented, whether it is successful. User satisfaction is one evaluation mechanism for determining system success. This study develops a reliable and valid instrument for measuring ERP ultimate‐user satisfaction. Design/methodology/approach Initial ERP system characteristics and the implementation context were investigated. Some previously validated instruments were selected for examination using rigorous interview techniques. A modified version was developed and pre‐tested. The instrument was then used to administer a test to 264 Taiwanese users that interact directly with an ERP system. Findings The results suggest a ten‐item instrument to measure three components of ultimate‐user satisfaction in an ERP environment: ERP project team and service, ERP product, and user knowledge and involvement. Originality/value This study has conducted a rigorous scale development procedure to establish a reliable and valid instrument for measuring ERP ultimate‐user satisfaction.},
    issn={0144-3577},
    doi={10.1108/01443570610678657},
    url={https://doi.org/10.1108/01443570610678657}
}

@inproceedings{10.1145/3287324.3293750,
    author = {Leelanupab, Teerapong and Meephruek, Tiwipab},
    title = {CodeBuddy (Collaborative Software Development Environment): In- and Out-Class Practice for Remote Pair-Programming with Monitoring Coding Students' Progress},
    year = {2019},
    isbn = {9781450358903},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/3287324.3293750},
    doi = {10.1145/3287324.3293750},
    abstract = {Pair-programming is an Agile technique in Extreme Programming (XP) where traditionally two programmers need to be collocated and work together at one workstation. Previous research has shown that pair-programming is very beneficial in software engineering education. However, learning and practicing pair-programming are mostly limited in a class where students can only learn to collaboratively program with another student in controlled or laboratory settings. Although nowadays there exist some collaborative tools, such as CodePilot, Google Colaboratory and Git, they are not specifically pair-programming-oriented. This impedes a pairing's ability to discuss effective strategies in problem solving, to form productive or mutually learning pairs, and to predict pair compatibility. To encourage students in out-class practice of pair-programming, we present a demonstration of a novel web-based software development environment, called CodeBuddy, for remote pair-programming. CodeBuddy provides instructors and students with several features for managing laboratory classes and practicing pair-programming. Examples of CodeBuddy's features include: coding screen mirroring between a pair, output terminal to show compiled results, face-to-face like communication channels (i.e., video calling and instant text messaging), automatic and manual role switching, code quality analysis for monitoring coding students' progress and recommending a pair with targeted pairing goals, implicit code reviews using face detection for tracking a reviewer's engagement, line-by-line code commenting, etc. The demonstration consists of a walkthrough of two use-case scenarios: an instructor assigns a problem-solving task and two students remotely work together in a pair using CodeBuddy on two different workstations to solve it.},
    booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
    pages = {1290},
    numpages = {1},
    keywords = {software engineering, agile software development, pair programming, remote collaboration and learning},
    location = {Minneapolis, MN, USA},
    series = {SIGCSE '19}
}

@misc{pfeiffer2022license,
  title={License Incompatibilities in Software Ecosystems}, 
  author={Rolf-Helge Pfeiffer},
  year={2022},
  eprint={2203.01634},
  archivePrefix={arXiv},
  primaryClass={cs.SE},
  url={https://arxiv.org/abs/2203.01634}
}

@INPROCEEDINGS{8667977,
  author={Feng, Muyue and Mao, Weixuan and Yuan, Zimu and Xiao, Yang and Ban, Gu and Wang, Wei and Wang, Shiyang and Tang, Qian and Xu, Jiahuan and Su, He and Liu, Binghong and Huo, Wei},
  booktitle={2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER)}, 
  title={Open-Source License Violations of Binary Software at Large Scale}, 
  year={2019},
  volume={},
  number={},
  pages={564-568},
  url={https://ieeexplore.ieee.org/document/8667977},
  doi={10.1109/SANER.2019.8667977}
}

@inproceedings{10.1145/3133956.3134048,
    author = {Duan, Ruian and Bijlani, Ashish and Xu, Meng and Kim, Taesoo and Lee, Wenke},
    title = {Identifying Open-Source License Violation and 1-Day Security Risk at Large Scale},
    year = {2017},
    isbn = {9781450349468},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/3133956.3134048},
    doi = {10.1145/3133956.3134048},
    abstract = {With millions of apps available to users, the mobile app market is rapidly becoming very crowded. Given the intense competition, the time to market is a critical factor for the success and profitability of an app. In order to shorten the development cycle, developers often focus their efforts on the unique features and workflows of their apps and rely on third-party Open Source Software (OSS) for the common features. Unfortunately, despite their benefits, careless use of OSS can introduce significant legal and security risks, which if ignored can not only jeopardize security and privacy of end users, but can also cause app developers high financial loss. However, tracking OSS components, their versions, and interdependencies can be very tedious and error-prone, particularly if an OSS is imported with little to no knowledge of its provenance.We therefore propose OSSPolice, a scalable and fully-automated tool for mobile app developers to quickly analyze their apps and identify free software license violations as well as usage of known vulnerable versions of OSS. OSSPolice introduces a novel hierarchical indexing scheme to achieve both high scalability and accuracy, and is capable of efficiently comparing similarities of app binaries against a database of hundreds of thousands of OSS sources (billions of lines of code). We populated OSSPolice with 60K C/C++ and 77K Java OSS sources and analyzed 1.6M free Google Play Store apps. Our results show that 1) over 40K apps potentially violate GPL/AGPL licensing terms, and 2) over 100K of apps use known vulnerable versions of OSS. Further analysis shows that developers violate GPL/AGPL licensing terms due to lack of alternatives, and use vulnerable versions of OSS despite efforts from companies like Google to improve app security. OSSPolice is available on GitHub.},
    booktitle = {Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security},
    pages = {2169–2185},
    numpages = {17},
    keywords = {application security, license violation, code clone detection},
    location = {Dallas, Texas, USA},
    series = {CCS '17}
}

@INPROCEEDINGS{9436754,
  author={Pichidtienthum, Sopanawit and Pugsee, Pakawan and Cooharojananone, Nagul},
  booktitle={2021 IEEE 8th International Conference on Industrial Engineering and Applications (ICIEA)}, 
  title={Developing Module Generation for Odoo Using Concept of Low-Code Development Platform and Automation Systems}, 
  year={2021},
  volume={},
  number={},
  pages={529-533},
  doi={10.1109/ICIEA52957.2021.9436754},
  url={https://ieeexplore.ieee.org/document/9436754}
  }

@article{HERTEL20031159,
    title = {Motivation of software developers in Open Source projects: an Internet-based survey of contributors to the Linux kernel},
    journal = {Research Policy},
    volume = {32},
    number = {7},
    pages = {1159-1177},
    year = {2003},
    note = {Open Source Software Development},
    issn = {0048-7333},
    doi = {https://doi.org/10.1016/S0048-7333(03)00047-7},
    url = {https://www.sciencedirect.com/science/article/pii/S0048733303000477},
    author = {Guido Hertel and Sven Niedner and Stefanie Herrmann},
    keywords = {Open Source Software, Linux, Virtual teams, Motivation, VIST model},
    abstract = {The motives of 141 contributors to a large Open Source Software (OSS) project (the Linux kernel) was explored with an Internet-based questionnaire study. Measured factors were both derived from discussions within the Linux community as well as from models from social sciences. Participants’ engagement was particularly determined by their identification as a Linux developer, by pragmatic motives to improve own software, and by their tolerance of time investments. Moreover, some of the software development was accomplished by teams. Activities in these teams were particularly determined by participants’ evaluation of the team goals as well as by their perceived indispensability and self-efficacy.}
}


@inproceedings{10.5555/1030453.1030540,
    author = {Wiedemann, Thomas},
    title = {Open Source Initiatives for Simulation Software: Next Generation Simulation Environments Founded on Open Source Software and XML-Based Standard Interfaces},
    year = {2002},
    isbn = {0780376153},
    publisher = {Winter Simulation Conference},
    abstract = {During the Winter Simulation Conference 2001 the OpenSML-project was presented and started. The OpenSML-project is based on the Simulation Modeling Language (SMLTM) and is an open source, web-based, multi-language simulation development project guided by a consortium of industrial, academic and government simulation consultants, practitioners and developers. For the simulation community, the open source movement represents an opportunity to improve the quality of common core simulation functions, improve the potential for creating reusable modeling components from those core functions, and improve the ability to merge those components using XML, HLA and other simulation community standards. This paper extends the OpenSML-project by using universal, language independent XML-descriptions and code generators for converting OpenSML-models to programs in Java, VisualBasic or C++. This would be the first time a simulation model could be transferred between different platforms without manual changes.},
    booktitle = {Proceedings of the 34th Conference on Winter Simulation: Exploring New Frontiers},
    pages = {623–628},
    numpages = {6},
    location = {San Diego, California},
    series = {WSC '02}
}

@phdthesis{ingenierie_system_information_hotel_odoo_2020,
  author={Djouahra, Abdeslam and Hallalel, Tarek},
  title={Développement d'une solution ERP pour la gestion Hôtelière sous la plateforme ODOO},
  url={https://www.ummto.dz/dspace/handle/ummto/13078},
  SCHOOL = {Université Mouloud Mammeri},
  hal_id = {MAST.INF.24-20},
  YEAR = {2021},
  month = {22 mars},
  abstract={Les organismes d’aujourd’hui visent à automatiser la gestion interne de leurs activités en faisant appel à des technologies informatiques plus sophistiquées comme les PGI (Progiciels de Gestion Intégrés), ou ERP (Progiciel de Gestion Intégré). Dans ce mémoire nous avons mis en place un ERP de gestion hôtelière, ainsi qu’un site web qui offre la possibilité d’une demande de réservation sous ODOO V12. Ce travail consiste à gérer les réservations et les principales fonctionnalités de l’hôtel qui lui sont liées. La modélisation de notre application a été faite par UML. La base de données et l’application ont été respectivement gérés par ODOO. ODOO utilise le SGBD PostgreSQL et les langages Python, XML réputés par leurs puissances, dynamismes et efficacités.},
  TYPE = {Theses},
  pdf = {https://www.ummto.dz/dspace/bitstream/handle/ummto/13078/Djouahra\%20A\%2c\%20Hallalel\%20\%20T..pdf},
}
